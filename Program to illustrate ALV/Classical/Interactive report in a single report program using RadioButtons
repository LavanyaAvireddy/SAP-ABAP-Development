REPORT ZALV_CLASSICAL_INTERACTIVE no standard page heading.

Tables: Zmaterial,
        ZPurchase,
        Zcust.

Types: Begin of Ty_Material,
       MATID type Zmaterial-MATID,
       MAT_NAME type Zmaterial-MAT_NAME,
       MAT_DES type Zmaterial-MAT_DES,
       MAT_PRICE type Zmaterial-MAT_PRICE,
       MAT_WEIGHT type Zmaterial-MAT_WEIGHT,
       End of Ty_Material.

Types: Begin of Ty_Purchase,
       CUSTID type ZPurchase-CUSTID,
       MATID type ZPurchase-MATID,
       AMOUNT_PAID type ZPurchase-AMOUNT_PAID,
       End of Ty_Purchase.

Types: Begin of Ty_Pur,
       MATID type ZPurchase-MATID,
       Custid type ZPurchase-CUSTID,
       End of Ty_Pur.

Types: begin of Ty_Customer,
       CUSTID type Zcust-CUSTID,
       CUST_NAME type Zcust-CUST_NAME,
       CUST_ADD type Zcust-CUST_ADD,
       CUST_CO type Zcust-CUST_CO,
       CUST_AGE type Zcust-CUST_AGE,
       End of Ty_Customer.

Data: It_Customer type table of Zcust,
      Wa_Customer like line of it_Customer.

Data: It_Pur type table of ZPurchase,
      Wa_Pur Like line of It_Pur.

DATA : I_FCAT TYPE SLIS_T_FIELDCAT_ALV,                                   "Internal table and workarea declaration for Fieldcatalouge
       WA_FCAT TYPE SLIS_FIELDCAT_ALV .

DATA : V_POS TYPE I .

DATA : WA_LAYOUT TYPE SLIS_LAYOUT_ALV.

Data: It_Material type table of zmaterial,
      Wa_material like line of It_Material.

Data: It_Purchase type table of Ty_Purchase,
      Wa_Purchase like line of It_Purchase.

DATA : I_EVENTS TYPE SLIS_T_EVENT,                                        "Internal table and workarea declaration for Events
       WA_EVENTS LIKE LINE OF I_EVENTS .

DATA : I_HEADING TYPE SLIS_T_LISTHEADER,                                  "Internal table and workarea declaration for Commentary write
       WA_HEADING LIKE LINE OF I_HEADING.

Selection-screen begin of block b1 with frame title text-004.

  parameters: P_Mat Radiobutton group RB2.
  Parameters: P_Cust Radiobutton group RB2.

selection-screen end of block b1.

selection-screen begin of block b2 with frame title text-001.

  parameters: mat_id type zpurchase-matid visible length 10.

selection-screen end of block b2.

selection-screen begin of block b4 with frame title text-003.

  parameters: Cust_id type ZPurchase-CUSTID visible length 10.

selection-screen end of block b4.

selection-screen begin of block b3 with frame title text-002.

  parameters: P_Class Radiobutton group RB1.
  Parameters: P_ALV Radiobutton group RB1.

selection-screen end of block b3.



At selection-screen on value-request for Mat_Id.
  perform Field_Valuehelp_For_MaterialID.

At selection-screen on value-request for Cust_Id.
  perform Field_Valuehelp_For_CustomerID.

At line-selection.
  Perform Get_Customer_Details.
  Perform Display_Customer_details.
  Perform Get_Purchase_Details.
  Perform Display_Purchase_Details.

Start-of-selection.
  Perform Get_Material_Data.
  Perform Display_material_Data_Class.
  Perform Field_Catlouge_Material.
  Perform Create_Layout_Material.
  Perform Display_material_Data_ALV.

  Perform Get_Customer_Data.
  Perform Display_Customer_Data_Class.
  Perform Field_Catlouge_Customer.
  Perform Create_Layout_Customer.
  Perform Display_Customer_Data_ALV.

  Perform Get_events.

Top-of-Page.
  Perform Display_headings.


Form Field_Valuehelp_For_MaterialID.

  Select Matid
    from Zpurchase
    into table it_pur.

    call function 'F4IF_INT_TABLE_VALUE_REQUEST'
    EXPORTING
      retfield    = 'MATID'
      dynpprog    = sy-repid
      dynpnr      = sy-dynnr
      dynprofield = 'MATID'
      value_org   = 'S'
    TABLES
      value_tab   = It_Pur.

Endform.

form Field_Valuehelp_For_CustomerID.

   Select Custid
    from Zpurchase
    into table it_pur.

    call function 'F4IF_INT_TABLE_VALUE_REQUEST'
    EXPORTING
      retfield    = 'CUSTID'
      dynpprog    = sy-repid
      dynpnr      = sy-dynnr
      dynprofield = 'CUSTID'
      value_org   = 'S'
    TABLES
      value_tab   = It_Pur.

Endform.


Form Get_Material_Data.

if P_Mat = 'X'.
   If Mat_Id is initial.
     Message: 'Please enter Material ID' type 'I'.
   Else.
     Select *
       from Zmaterial
       into table it_Material
       where Matid = Mat_id.
   Endif.
Endif.

Endform.

Form Display_material_Data_Class.

if P_Mat = 'X'.
   If It_Material is not Initial.
     if P_Class = 'X'.
         Write: 'Material ID','Material Name','Material Des','Material Price','Material Weight'.
         Loop at it_Material into Wa_material.
           Write: / Wa_material-Matid,
                    Wa_material-MAT_NAME,
                    Wa_material-MAT_DES,
                    Wa_material-MAT_PRICE,
                    Wa_material-MAT_WEIGHT.
           Hide Wa_Material.
         Endloop.
      Endif.
    Else.
         Message: 'Please enter valid Material ID' type 'I'.

   Endif.
Endif.

Endform.

form Display_material_Data_ALV.

if P_Mat = 'X'.
  If It_Material is not Initial.
     if P_ALV = 'X'.
          CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
          EXPORTING
              I_CALLBACK_PROGRAM = SY-REPID
              IS_LAYOUT          = WA_LAYOUT
              IT_FIELDCAT        = I_FCAT
          TABLES
              T_OUTTAB           = It_Material.
      Endif.
  Else.
         Message: 'Please enter valid Material ID' type 'I'.
   Endif.
Endif.

Endform.

Form Field_Catlouge_Material.

if P_Mat = 'X'.
  V_POS = 1 .
  WA_FCAT-COL_POS = V_POS.
  WA_FCAT-FIELDNAME = 'MATID' .
  WA_FCAT-SELTEXT_M = 'Material.ID' .
  WA_FCAT-HOTSPOT = 'X' .
  APPEND WA_FCAT TO I_FCAT .
  CLEAR WA_FCAT .

  V_POS = 2 .
  WA_FCAT-COL_POS = V_POS.
  WA_FCAT-FIELDNAME = 'MAT_NAME' .
  WA_FCAT-SELTEXT_M = 'Material Name' .
  WA_FCAT-HOTSPOT = 'X' .
  APPEND WA_FCAT TO I_FCAT .
  CLEAR WA_FCAT .

  V_POS = 3.
  WA_FCAT-COL_POS = V_POS.
  WA_FCAT-FIELDNAME = 'MAT_DES' .
  WA_FCAT-SELTEXT_M = 'Material Des' .
  WA_FCAT-HOTSPOT = 'X' .
  APPEND WA_FCAT TO I_FCAT .
  CLEAR WA_FCAT .

  V_POS = 4.
  WA_FCAT-COL_POS = V_POS.
  WA_FCAT-FIELDNAME = 'MAT_PRICE' .
  WA_FCAT-SELTEXT_M = 'Material Price' .
  WA_FCAT-HOTSPOT = 'X' .
  APPEND WA_FCAT TO I_FCAT .
  CLEAR WA_FCAT .

  V_POS = 5.
  WA_FCAT-COL_POS = V_POS.
  WA_FCAT-FIELDNAME = 'MAT_WEIGHT' .
  WA_FCAT-SELTEXT_M = 'Material Weight' .
  WA_FCAT-HOTSPOT = 'X' .
  APPEND WA_FCAT TO I_FCAT .
  CLEAR WA_FCAT .
Endif.

Endform.

Form Create_Layout_Material.

if P_Mat = 'X'.
  WA_LAYOUT-ZEBRA = 'X' .
  WA_LAYOUT-COLWIDTH_OPTIMIZE = 'X' .
  WA_LAYOUT-EDIT = 'X' .
  WA_LAYOUT-NO_VLINE = 'X' .
  WA_LAYOUT-NO_HLINE = 'X' .
Endif.

Endform.


Form Get_Customer_Data.

IF P_Cust = 'X'.
  If Cust_Id is initial.
     Message: 'Please enter Customer ID' type 'I'.
   Else.
     Select *
       from ZCust
       into table it_Customer
       where Custid = Cust_id.
   Endif.
Endif.

Endform.

form Display_Customer_Data_Class.

  if P_Cust = 'X'.
   If It_Customer is not Initial.
     if P_Class = 'X'.
         Write: 'Customer ID','Customer Name','Customer Add','Customer Contact','Customer Age'.
         Loop at it_Customer into Wa_Customer.
           Write: / Wa_Customer-CUSTID,
                    Wa_Customer-CUST_NAME,
                    Wa_Customer-CUST_ADD,
                    Wa_Customer-CUST_CO,
                    Wa_Customer-CUST_AGE.
         Endloop.
      Endif.
    Else.
         Message: 'Please enter valid Customer ID' type 'I'.

   Endif.
Endif.


Endform.

Form Field_Catlouge_Customer.

if P_Cust = 'X'.
  V_POS = 1 .
  WA_FCAT-COL_POS = V_POS.
  WA_FCAT-FIELDNAME = 'CUSTID' .
  WA_FCAT-SELTEXT_M = 'Customer.ID' .
  WA_FCAT-HOTSPOT = 'X' .
  APPEND WA_FCAT TO I_FCAT .
  CLEAR WA_FCAT .

  V_POS = 2 .
  WA_FCAT-COL_POS = V_POS.
  WA_FCAT-FIELDNAME = 'CUST_NAME' .
  WA_FCAT-SELTEXT_M = 'Customer Name' .
  WA_FCAT-HOTSPOT = 'X' .
  APPEND WA_FCAT TO I_FCAT .
  CLEAR WA_FCAT .

  V_POS = 3.
  WA_FCAT-COL_POS = V_POS.
  WA_FCAT-FIELDNAME = 'CUST_ADD' .
  WA_FCAT-SELTEXT_M = 'Customer Address' .
  WA_FCAT-HOTSPOT = 'X' .
  APPEND WA_FCAT TO I_FCAT .
  CLEAR WA_FCAT .

  V_POS = 4.
  WA_FCAT-COL_POS = V_POS.
  WA_FCAT-FIELDNAME = 'CUST_CO' .
  WA_FCAT-SELTEXT_M = 'Customer Contact' .
  WA_FCAT-HOTSPOT = 'X' .
  APPEND WA_FCAT TO I_FCAT .
  CLEAR WA_FCAT .

  V_POS = 5.
  WA_FCAT-COL_POS = V_POS.
  WA_FCAT-FIELDNAME = 'CUST_AGE' .
  WA_FCAT-SELTEXT_M = 'Customer Age' .
  WA_FCAT-HOTSPOT = 'X' .
  APPEND WA_FCAT TO I_FCAT .
  CLEAR WA_FCAT .
Endif.


Endform.

form Create_Layout_Customer.

if P_Cust = 'X'.
  WA_LAYOUT-ZEBRA = 'X' .
  WA_LAYOUT-COLWIDTH_OPTIMIZE = 'X' .
  WA_LAYOUT-EDIT = 'X' .
  WA_LAYOUT-NO_VLINE = 'X' .
  WA_LAYOUT-NO_HLINE = 'X' .
Endif.

Endform.

form Display_Customer_Data_ALV.

  if P_Cust = 'X'.
  If It_Customer is not Initial.
     if P_ALV = 'X'.
          CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
          EXPORTING
              I_CALLBACK_PROGRAM = SY-REPID
              IS_LAYOUT          = WA_LAYOUT
              IT_FIELDCAT        = I_FCAT
          TABLES
              T_OUTTAB           = It_Customer.
      Endif.
  Else.
         Message: 'Please enter valid Customer ID' type 'I'.
   Endif.
Endif.

Endform.

Form Display_headings.

  if P_CLass = 'X' and P_Mat = 'X'.
    Write: 'Material Details' color 5.
  Elseif P_Class = 'X' and P_Cust = 'X'.
    Write: 'Customer Details' color 5.
  Endif.


Endform.

Form Get_Events.

  CALL FUNCTION 'REUSE_ALV_EVENTS_GET'
   IMPORTING
     ET_EVENTS             = I_EVENTS .

  READ TABLE I_EVENTS INTO WA_EVENTS WITH KEY NAME = 'TOP_OF_PAGE' .
  WA_EVENTS-FORM = 'FORM_TOP_OF_PAGE' .
  MODIFY  I_EVENTS FROM WA_EVENTS INDEX SY-TABIX .


  READ TABLE I_EVENTS INTO WA_EVENTS WITH KEY NAME = 'END_OF_LIST' .
  WA_EVENTS-FORM = 'FORM_END_OF_LIST' .
  MODIFY  I_EVENTS FROM WA_EVENTS INDEX SY-TABIX.

Endform.

FORM FORM_TOP_OF_PAGE .

if P_ALV = 'X' and P_Mat = 'X'.
  WA_HEADING-TYP = 'H' .
  WA_HEADING-INFO = 'Materials Details Report' .
  APPEND WA_HEADING TO I_HEADING .

  WA_HEADING-TYP = 'S' .
  WA_HEADING-KEY = 'USERNAME' .
  WA_HEADING-INFO = SY-UNAME .
  APPEND WA_HEADING TO I_HEADING .

  WA_HEADING-TYP = 'A' .
  WA_HEADING-KEY = 'DATE' .
  WA_HEADING-INFO = SY-DATUM .
  APPEND WA_HEADING TO I_HEADING .

   CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
    EXPORTING
      IT_LIST_COMMENTARY       = I_HEADING.

 Elseif P_ALV = 'X' and P_Cust = 'X'.
  WA_HEADING-TYP = 'H' .
  WA_HEADING-INFO = 'Customer Details Report' .
  APPEND WA_HEADING TO I_HEADING .

  WA_HEADING-TYP = 'S' .
  WA_HEADING-KEY = 'USERNAME' .
  WA_HEADING-INFO = SY-UNAME .
  APPEND WA_HEADING TO I_HEADING .

  WA_HEADING-TYP = 'A' .
  WA_HEADING-KEY = 'DATE' .
  WA_HEADING-INFO = SY-DATUM .
  APPEND WA_HEADING TO I_HEADING .

   CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
    EXPORTING
      IT_LIST_COMMENTARY       = I_HEADING.
ENdif.

Endform.

FORM FORM_END_OF_LIST .

  REFRESH I_HEADING .
  CLEAR WA_HEADING .

  WA_HEADING-TYP = 'S' .
  WA_HEADING-INFO = 'Ford Motor Company' .
  APPEND WA_HEADING TO I_HEADING .

  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
   EXPORTING
     IT_LIST_COMMENTARY       = I_HEADING
    I_END_OF_LIST_GRID       = 'X'.


ENDFORM .


Form Get_Customer_Details.

  Select Custid Matid
    from Zpurchase
    into table it_purchase
    where Matid = Wa_Material-Matid.


Endform.

form Display_Customer_details.

  If it_purchase is not initial.
    Write: / 'Customer ID'color 5, 'Material ID' Color 5.
    loop at it_purchase into wa_purchase.
      write:/ wa_purchase-Custid,
              wa_Purchase-Matid.
    endloop.
  endif.

Endform.

Form Get_Purchase_Details.

   Select Custid Matid
    from Zpurchase
    into table it_purchase
    where custid = Wa_Customer-custid.


Endform.

form Display_Purchase_Details.

  If it_purchase is not initial.
    Write: / 'Customer ID'color 5, 'Material ID' Color 5.
    loop at it_purchase into wa_purchase.
      write:/ wa_purchase-Custid,
              wa_Purchase-Matid.
    endloop.
  endif.

Endform.
